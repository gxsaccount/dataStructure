红黑树：
2-3树的一种实现：
2-3树运行每个节点保存1个或者两个的值。
2节点保存一个key，左子树小于key，右子树大于key。
3节点保存2个key。左子树小于小key，中子树介于两个key之间，右子树大于大key。

红黑树中将节点之间连接氛围两种：
1.	红色链接：3节点，连接两个2-nodes节点来表示
2.	黑色链接：连接普通的2-3节点。


B+树
B树可以看作2-3树的扩展，它允许每个节点有M-1个子节点。B+树则是B树的扩展。
B树：
•	根节点至少有两个子节点（限制树不要太深）
•	每个节点有M-1个key（保证一个节点查找效率），并且以升序排列（自身性质）
•	位于M-1和M key的子节点的值位于M-1 和M key对应的Value之间（自身性质）
•	其它节点至少有M/2个子节点（限制树不要太深）
B+树：
B和B+树的区别在于，B+树的非叶子结点只包含导航信息，不包含实际的值，所有的叶子结点和相连的节点使用链表相连，便于区间查找和遍历。
B+ 树的优点在于：
•	由于B+树在内部节点上不包含数据信息，因此在内存页中能够存放更多的key。 数据存放的更加紧密，具有更好的空间局部性。因此访问叶子节点上关联的数据也具有更好的缓存命中率。
•	B+树的叶子结点都是相链的，因此对整棵树的便利只需要一次线性遍历叶子结点即可。而且由于数据顺序排列并且相连，所以便于区间查找和搜索。而B树则需要进行每一层的递归遍历。相邻的元素可能在内存中不相邻，所以缓存命中性没有B+树好。
但是B树也有优点，其优点在于，由于B树的每一个节点都包含key和value，因此经常访问的元素可能离根节点更近，因此访问也更迅速。下面是B 树和B+树的区别

搜索：略
插入：

删除：

